Params.set_params(int_precision=64, f=40, k=64)
NUM_PARTIES = 6

SGD_ITERS = 1
data_size = 16
dim = 23
BATCH_SIZE = 16

X = s_fix_mat.read_input(data_size, dim, 0)
y = s_fix_mat.read_input(data_size, 1, 0)

#reveal_all(y, "y vector")

w = s_fix_mat(dim, 1)
#alpha_B = sfix(0.01 / BATCH_SIZE)
alpha_B = c_fix(0.01 / BATCH_SIZE)

XB = s_fix_mat(BATCH_SIZE, dim)
yB = s_fix_mat(BATCH_SIZE, 1)

for i in range(SGD_ITERS):
    batch_low = i * BATCH_SIZE
    batch_high = (i + 1) * BATCH_SIZE

    for j in range(BATCH_SIZE):
        for d in range(dim):
            XB[j][d] = X[batch_low + j][d]
        yB[j][0] = y[batch_low + j][0]

    w_ret = matmul(XB, w)
    #reveal_all(w_ret, "w_ret")
    w_sigmoid = sigmoid(w_ret)
    #reveal_all(w_sigmoid, "w_sigmoid")
    w_sub = matsub(w_sigmoid, yB)
    XB_T = transpose(XB)
    w_1 = matmul(XB_T, w_sub)
    #reveal_all(w_1, "w_1")
    w_2 = mat_const_mul(alpha_B, w_1)
    #reveal_all(w_2, "w_2")
    w_res = matsub(w, w_2)
    mat_assign(w, w_res)
    #print_ln("Iter: %s", i)

reveal_all(w, "w_final")
